services:

  backend: # --
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1

  frontend: # --
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    environment:
      - FLASK_ENV=development # development, production

  prometheus: # Scrapes data from the backend and node_exporter
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'

  grafana: # query data from prometheus
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/loki-local-config.yaml:/etc/loki/loki-local-config.yaml
      - loki-index:/loki/index
      - loki-boltdb-cache:/loki/boltdb-cache
      - loki-chunks:/loki/chunks
      - loki-wal:/wal
      - loki-compactor:/loki/compactor
    command: -config.file=/etc/loki/loki-local-config.yaml
    user: "0:0"

  promtail: # agent to collect logs
    image: grafana/promtail:latest
    volumes:
      - ./backend:/app
      - ./monitoring/promtail:/etc/promtail
    command: -config.file=/etc/promtail/promtail-config.yaml

  node_exporter: # exposes system metrics
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"

volumes:
  grafana_data:
  loki-index:
  loki-boltdb-cache:
  loki-chunks:
  loki-wal:
  loki-compactor:
